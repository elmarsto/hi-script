/* Core */ 

<delimiter>				::= ; | \n
<line>					::= (<line-expr> <delimiter>)+ 
<line-expr>				::= <lambda> | <value> | <monad> | e 
<lambda>				::= <when> | <let>
<when>					::= when <expr> | when between <expr>  | whenever <expr>
<let>					::= <symbol> \<\- <expr> | let <symbol> be <expr> | <symbol> = (<monad>)
<symbol>				::= (<alnum>*) | <opchar>+
<atom>					::= <number> | <character> | <boolean> | <string> | <regex> | <xpath> 
<monad>					::= <expr> (& <expr>)+ | \( <monad> \) 
<expr>					::= <monad> | <value>
<value>					::= <implicit-force> | <explicit-force> 
<explicit-force>		::= <explicit-force-once> | <explicit-force-until-fail>
<explicit-force-once>	::= <expr> 
<explicit-force-until-fail>	::= <expr> !!
<implicit-force>		::= <symbol> | <keyword> | <atom> | <monad>
<keyword>				::= <io>  | <stack> 
<stack>					::= <tip> | <tail> | <depth>
<depth>					::= # 
<tip>					::= <shift> | <unshift>
<tail>					::= <push> | <pop> | <drop> | <swap>
<io>					::= <in> | <out> 
<in>					::= <in-pop> | <in-peek> | <in-until-fail>
<in-pop>				::= < 
<in-peek>				::= <<   (* impl. internal index decr w/ reset next <in-pop> *)
<in-until-fail>			::= <* 
<out>					::= <out-push> | <out-until-fail> 
<out-push>				::= >
<out-until-fail>		::= *>
<drop>					::= <drop-once> | <drop-until-fail>
<drop-once>				::= ~
<drop-until-fail>		::= *~
<pop>					::= _  
<call-with-context>		::= ? <expr>
<force>					::= !
<apply-expr>			::= <strainer> | <apply-expr-once> | <apply-expr-until-fail>
<apply-expr-once>		::= : <expr>
<apply-expr-until-fail>	::= :: <expr>
<strainer>				::= <strain-out-symbols> | <strain-out-stack> 
<strain-out-symbols>	::= @ <expr>
<strain-out-stack>		::= % <expr>
<character>				::= <quoted-char> |  <escaped-char>
<quoted-char>			::= '<non-control-char>' 
<escaped-char>			::= <escaped-delimiter> | <escaped-utf-8> | <escaped-unicode> | <escaped-xml>
<escaped-delimiter>		::= \\n | \\r | \\0 
<escaped-utf-8>			::= (\\(<octa>{3})){2}
<escaped-unicode>		::= U\+(<hexa>{4})
<escaped-xml> 			::= &#(<deca>)+;
<opchar>				::= /* all unicode punctuation non-letter-like symbols except for _ and - */
<non-control-char>		::= /* the set of all characters that are not control characters */ 
<alnum>					::= (<alpha>|<deca>|_|-)
<char>					::= /* any unicode character */ 
<number>				::= <decimal> | <hexadecimal> | <octal>
<octal>					::= (<octa>+)
<decimal>				::= <integer> | <float> 
<float>					::= <integer>\.<positive>((e<integer>)?)
<integer>				::= <negative> | <positive>
<positive>				::= <deca>+ 
<negative>				::= -<positive> 
<hexadecimal>			::= 0x(<hexa>+)
<deca>					::= [0-9]
<hexa>					::= [A-Fa-f0-9]
<octa>					::= [0-7]
<alpha>					::= [A-Za-z]
